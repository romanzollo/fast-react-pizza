// Test ID: IIDSAT

import { useFetcher, useLoaderData } from 'react-router-dom';

import { getOrder } from '../../services/apiRestaurant';
import {
  calcMinutesLeft,
  formatCurrency,
  formatDate,
} from '../../utils/helpers';

import OrderItem from './OrderItem';
import { useEffect } from 'react';

function Order() {
  const order = useLoaderData();

  // —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤–Ω–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –≤—ã–∑–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ (–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ) –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL-–∞–¥—Ä–µ—Å–∞.
  const fetcher = useFetcher();

  useEffect(
    function () {
      // –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ '/menu' —á–µ—Ä–µ–∑ fetcher
      if (!fetcher.data && fetcher.state === 'idle') fetcher.load('/menu');
    },
    [fetcher],
  );

  // Everyone can search for all orders, so for privacy reasons we're gonna gonna exclude names or address, these are only for the restaurant staff
  const {
    id,
    status,
    priority,
    priorityPrice,
    orderPrice,
    estimatedDelivery,
    cart,
  } = order;

  const deliveryIn = calcMinutesLeft(estimatedDelivery);

  return (
    <div className="space-y-8 px-4 py-6">
      <div className="flex flex-wrap items-center justify-between gap-2">
        <h2 className="text-xl font-semibold">
          Order #{id} status: {status}
        </h2>

        <div className="space-x-2">
          {priority && (
            <span className="rounded-full bg-red-500 px-3 py-1 text-sm font-semibold uppercase tracking-wide text-red-50">
              Priority
            </span>
          )}
          <span className="rounded-full bg-green-500 px-3 py-1 text-sm font-semibold uppercase tracking-wide text-green-50">
            {status} order
          </span>
        </div>
      </div>

      <div className="flex flex-wrap items-center justify-between gap-2 bg-stone-200 px-6 py-5">
        <p className="font-medium">
          {deliveryIn >= 0
            ? `Only ${calcMinutesLeft(estimatedDelivery)} minutes left üòÉ`
            : 'Order should have arrived'}
        </p>
        <p className="text-xs text-stone-500">
          (Estimated delivery: {formatDate(estimatedDelivery)})
        </p>
      </div>

      <ul className="divide-y divide-stone-200 border-b border-t">
        {cart.map((item) => (
          <OrderItem
            item={item}
            key={item.pizzaId}
            isLoadingIngredients={fetcher.state === 'loading'}
            // –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã '/menu'(–Ω–µ –ø–µ—Ä–µ—Ö–æ–¥—è –Ω–∞ —Å–∞–º—É —Å—Ç—Ä–∞–Ω–∏—Ü—É) –ø—Ä–∏ –ø–æ–º–æ—â–∏ —á–µ—Ä–µ–∑ fetcher (react-router v6.4)
            ingredients={
              fetcher.data?.find((el) => el.id === item.pizzaId).ingredients ??
              [] // –µ—Å–ª–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–∏ÃÜ –º–∞—Å—Å–∏–≤ —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏
            }
          />
        ))}
      </ul>

      <div className="space-y-2 bg-stone-200 px-6 py-5">
        <p className="text-sm font-medium text-stone-600">
          Price pizza: {formatCurrency(orderPrice)}
        </p>
        {priority && (
          <p className="text-sm font-medium text-stone-600">
            Price priority: {formatCurrency(priorityPrice)}
          </p>
        )}
        <p className="font-bold">
          To pay on delivery: {formatCurrency(orderPrice + priorityPrice)}
        </p>
      </div>
    </div>
  );
}

// —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é loader
// params - –≤—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–∞—Ä—à—Ä—É—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ URL
// useParams –Ω–µ–ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–∞–∫ –∫–∞–∫ –µ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
export async function loader({ params }) {
  const order = await getOrder(params.orderId);

  return order;
}

export default Order;
